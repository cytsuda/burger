{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","validationError","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","a","createElement","className","ValidationError","push","Invalid","elementType","Object","assign","join","onChange","changed","elementConfig","value","options","map","option","key","displayValue","Input","Label","label","module","exports","CheckoutSummary","ContactData","checkoutSummary","react_default","style","width","margin","Burguer","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","state","orderForm","name","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","ings","price","orderData","userId","onOrderBurguer","token","inputChangedHandler","inputIdentifier","updatedFormElement","updatedObject","target","checkValidity","updatedOrderForm","defineProperty","inputIdentifiers","setState","_this2","this","formElementsArray","id","config","form","onSubmit","formElement","disabled","loading","Spinner","Component","connect","burguerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","onInitPurchase","summary","react_router","to","purchaseRedirect","purchased","path","match","component"],"mappings":"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","file":"static/js/3.4243840d.chunk.js","sourcesContent":["import React from \"react\";\n\nimport classes from \"./Input.module.css\"\n\nconst input = (props) => {\n   let inputElement = null;\n   const inputClasses = [classes.InputElement]\n   let validationError;\n\n   if(props.invalid && props.shouldValidate && props.touched){\n      validationError = <p className={classes.ValidationError}>Please enter a valid value!</p>;\n      inputClasses.push(classes.Invalid);\n   }\n\n   switch (props.elementType){\n      case (\"input\"):\n         inputElement = <input \n            className={inputClasses.join(\" \")} \n            onChange={props.changed}\n            {...props.elementConfig} \n            value={props.value}/>;\n         break;\n      case (\"textArea\"):\n         inputElement = <textarea \n            className={inputClasses.join(\" \")} \n            onChange={props.changed}\n            {...props.elementConfig}\n            value={props.value}/>;\n         break;\n      case (\"select\"):\n         inputElement = (\n         <select \n            className={inputClasses.join(\" \")}\n            onChange={props.changed}\n            value={props.value}>\n            {props.elementConfig.options.map(option =>(\n               <option key={option.value} value={option.value}>{option.displayValue}</option>\n            ))}\n         </select>\n         );\n         break;\n      default:\n         inputElement = <input \n            className={inputClasses.join(\" \")} \n            onChange={props.changed}\n            {...props.elementConfig} \n            value={props.value}/>;\n   }\n\n   return (\n      <div className={classes.Input}>\n         <label className={classes.Label}>{props.label}</label>\n         {inputElement}\n         {validationError}\n      </div>\n   );\n}\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__28_fr\",\"Label\":\"Input_Label__1ieAo\",\"InputElement\":\"Input_InputElement__3jzb8\",\"Invalid\":\"Input_Invalid__3_x-6\",\"ValidationError\":\"Input_ValidationError___tsqq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1EMHq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2ijan\"};","import React from \"react\";\n\nimport Burguer from \"../../Burguer/Burguer\";\nimport Button from \"../../UI/Button/Button\";\n\nimport classes from \"./CheckoutSummary.module.css\";\n\nconst checkoutSummary = (props) => {\n   return(\n      <div className={classes.CheckoutSummary}>\n         <h1>We hope it taste well!!</h1>\n         <div style={{width: \"100%\",margin:\"auto\"}}>\n            <Burguer ingredients={props.ingredients}/>\n         </div>\n         <Button \n            btnType=\"Danger\"\n            clicked={props.checkoutCancelled}>\n            CANCEL\n         </Button>\n         <Button \n            btnType=\"Success\"\n            clicked={props.checkoutContinued}>\n            CONTINUE\n         </Button>\n      </div>\n   )\n}\n\nexport default checkoutSummary;","import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"../../../components/UI/Button/Button\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\n\n\nimport * as actions from '../../../store/actions/index';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport axios from \"../../../axio-orders\";\nimport {updatedObject, checkValidity} from '../../../shared/utility';\n\nimport classes from \"./ContactData.module.css\";\n\nclass ContactData extends Component {\n   state = {\n      orderForm: {\n         name: {\n            elementType:\"input\",\n            elementConfig: {\n               type: \"text\",\n               placeholder:\"Your Name\"\n            },\n            value: \"\",\n            validation: {\n               required:true\n            },\n            valid: false,\n            touched: false\n         },\n         street: {\n            elementType:\"input\",\n            elementConfig: {\n               type: \"text\",\n               placeholder:\"Your Street\"\n            },\n            value: \"\",\n            validation: {\n               required:true\n            },\n            valid: false,\n            touched: false\n         },\n         zipCode: {\n            elementType:\"input\",\n            elementConfig: {\n               type: \"text\",\n               placeholder:\"Zip Code\"\n            },\n            value: \"\",\n            validation: {\n               required:true,\n               minLength: 5,\n               maxLength: 5,\n               isNumeric: true\n            },\n            valid: false,\n            touched: false\n         },\n         country: {\n            elementType:\"input\",\n            elementConfig: {\n               type: \"text\",\n               placeholder:\"Your Country\"\n            },\n            value: \"\",\n            validation: {\n               required:true\n            },\n            valid: false,\n            touched: false\n         },\n         email: {\n            elementType:\"input\",\n            elementConfig: {\n               type: \"email\",\n               placeholder:\"Your Email\"\n            },\n            value: \"\",\n            validation: {\n               required:true,\n               isEmail: true\n            },\n            valid: false,\n            touched: false\n         },\n         deliveryMethod: {\n            elementType:\"select\",\n            elementConfig: {\n               options:[\n                  {value: \"fastest\",displayValue: \"Fastest\"},\n                  {value: \"cheapest\",displayValue: \"Cheapest\"}                \n               ]\n            },\n            validation: {},\n            value: \"fastest\",\n            valid: true\n         }\n      },\n      formIsValid: false\n   }\n\n   orderHandler = (event) => {\n      event.preventDefault();\n      \n      const formData = {};\n      for(let formElementIdentifier in this.state.orderForm){\n         formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n      }\n      // alert(\"You continue\");\n      const order = {\n         ingredients: this.props.ings,\n         price: this.props.price,\n         orderData: formData,\n         userId: this.props.userId\n      }\n      this.props.onOrderBurguer(order, this.props.token);\n   }\n\n   inputChangedHandler = (event, inputIdentifier) =>{\n      const updatedFormElement = updatedObject(this.state.orderForm[inputIdentifier],{\n         value: event.target.value,\n         valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\n         touched: true\n      });\n      const updatedOrderForm = updatedObject(this.state.orderForm,{\n         [inputIdentifier]: updatedFormElement\n      });\n      let formIsValid = true;\n      for(let inputIdentifiers in updatedOrderForm){\n         formIsValid = updatedOrderForm[inputIdentifiers].valid && formIsValid;\n      }\n      this.setState({orderForm: updatedOrderForm, formIsValid:formIsValid});\n   }\n\n   render () {\n      const formElementsArray = [];\n      for (let key in this.state.orderForm){\n         formElementsArray.push({\n            id:key,\n            config:this.state.orderForm[key]\n         });\n      }\n      let form = (\n            <form onSubmit={this.orderHandler}>\n               {formElementsArray.map(formElement => (\n                  <Input \n                     key={formElement.id}\n                     elementType={formElement.config.elementType}\n                     elementConfig={formElement.config.elementConfig}\n                     value={formElement.config.value}\n                     invalid={!formElement.config.valid}\n                     shouldValidate={formElement.config.validation}\n                     touched = {formElement.config.touched}\n                     changed={\n                        (event)=>this.inputChangedHandler(event, formElement.id)}\n                  />   \n               ))}\n               <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n      );\n      if(this.props.loading){\n         form = <Spinner />;\n      }\n      return(\n         <div className={classes.ContactData}>\n            <h4>Enter your data</h4>\n            {form}\n         </div>\n      );\n   }\n}\nconst mapStateToProps = (state) => {\n   return{\n      ings: state.burguerBuilder.ingredients,\n      price: state.burguerBuilder.totalPrice,\n      loading: state.order.loading,\n      token: state.auth.token,\n      userId: state.auth.userId\n   }\n}\n\nconst mapDispatchToProps = dispatch => {\n   return{ \n      onOrderBurguer: (orderData, token) => dispatch(actions.purchaseBurguer(orderData, token))\n   };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, {Component} from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"; \nimport { connect } from \"react-redux\";\n\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport ContactData from \"./ContactData/ContactData\";\nimport * as actions from '../../store/actions/index';\n\nclass Checkout extends Component {\n   componentWillMount(){\n      this.props.onInitPurchase();\n   }\n   checkoutCancelledHandler = () =>{\n      this.props.history.goBack();\n   }\n   checkoutContinuedHandler = () =>{\n      this.props.history.replace('/checkout/contact-data');\n   }\n   render(){\n      let summary = <Redirect to=\"/\"/>\n      if(this.props.ings){\n         const purchaseRedirect = this.props.purchased ?  <Redirect to=\"/\"/> : null;\n         summary = (\n            <div>\n               {purchaseRedirect}\n               <CheckoutSummary \n                  ingredients={this.props.ings}\n                  checkoutCancelled={this.checkoutCancelledHandler}\n                  checkoutContinued={this.checkoutContinuedHandler}/>\n               <Route \n                  path={this.props.match.path + \"/contact-data\"} \n                  component={ContactData}/>\n            </div>\n         )\n      }\n      return summary;\n   }\n}\nconst mapStateToProps = (state) => {\n   return {\n      ings: state.burguerBuilder.ingredients,\n      purchased: state.order.purchased\n   }\n}\nconst mapDispatchToProps = dispatch =>{\n   return {\n      onInitPurchase: () => dispatch(actions.purchaseInit())\n   }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);"],"sourceRoot":""}